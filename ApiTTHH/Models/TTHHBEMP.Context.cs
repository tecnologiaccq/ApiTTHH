//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ApiTTHH.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TALENTO_HUMANOEntities : DbContext
    {
        public TALENTO_HUMANOEntities()
            : base("name=TALENTO_HUMANOEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<BEMPL_CAT_ESTADO_CIVIL> BEMPL_CAT_ESTADO_CIVIL { get; set; }
        public virtual DbSet<BEMPL_CAT_GENERO> BEMPL_CAT_GENERO { get; set; }
        public virtual DbSet<BEMPL_CAT_IDIOMAS> BEMPL_CAT_IDIOMAS { get; set; }
        public virtual DbSet<BEMPL_CAT_NACIONALIDAD> BEMPL_CAT_NACIONALIDAD { get; set; }
        public virtual DbSet<BEMPL_CAT_NIVEL_ESTUDIO> BEMPL_CAT_NIVEL_ESTUDIO { get; set; }
        public virtual DbSet<BEMPL_CAT_NIVEL_IDIOMA> BEMPL_CAT_NIVEL_IDIOMA { get; set; }
        public virtual DbSet<BEMPL_CAT_TIPO_IDENTIFICACION> BEMPL_CAT_TIPO_IDENTIFICACION { get; set; }
        public virtual DbSet<BEMPL_CAT_CIUDAD> BEMPL_CAT_CIUDAD { get; set; }
        public virtual DbSet<BEMPL_CAT_PROVINCIAS> BEMPL_CAT_PROVINCIAS { get; set; }
        public virtual DbSet<BEMPL_USUARIO> BEMPL_USUARIO { get; set; }
        public virtual DbSet<BEMPL_CAT_NIVEL_ACADEMICO> BEMPL_CAT_NIVEL_ACADEMICO { get; set; }
        public virtual DbSet<BEMPL_DATOS_ACADEMICOS> BEMPL_DATOS_ACADEMICOS { get; set; }
        public virtual DbSet<BEMPL_ESTADONIVELACADEMICO> BEMPL_ESTADONIVELACADEMICO { get; set; }
        public virtual DbSet<BEMPL_IDIOMAS_POSTULANTE> BEMPL_IDIOMAS_POSTULANTE { get; set; }
        public virtual DbSet<BEMPL_EXPERIENCIA_LABORAL> BEMPL_EXPERIENCIA_LABORAL { get; set; }
        public virtual DbSet<BEMPL_DATOSPOSTULANTE> BEMPL_DATOSPOSTULANTE { get; set; }
        public virtual DbSet<BEMPL_REFERENCIAS_LABORA> BEMPL_REFERENCIAS_LABORA { get; set; }
        public virtual DbSet<BEMPL_RELACION_REF_CAT> BEMPL_RELACION_REF_CAT { get; set; }
        public virtual DbSet<BEMPL_CAT_CAPACITACIONES> BEMPL_CAT_CAPACITACIONES { get; set; }
    
        public virtual ObjectResult<sp_ReportPostulantes_Result> sp_ReportPostulantes(Nullable<int> idGenero, Nullable<bool> carnetDiscapacidad, Nullable<bool> movilizacion, Nullable<int> aniosExperienciaDesde, Nullable<int> aniosExperienciaHasta, Nullable<decimal> sueldoPretendidoDesde, Nullable<decimal> sueldoPretendidoHasta, Nullable<int> edadDesde, Nullable<int> edadHasta, string puesto, string estudio)
        {
            var idGeneroParameter = idGenero.HasValue ?
                new ObjectParameter("idGenero", idGenero) :
                new ObjectParameter("idGenero", typeof(int));
    
            var carnetDiscapacidadParameter = carnetDiscapacidad.HasValue ?
                new ObjectParameter("carnetDiscapacidad", carnetDiscapacidad) :
                new ObjectParameter("carnetDiscapacidad", typeof(bool));
    
            var movilizacionParameter = movilizacion.HasValue ?
                new ObjectParameter("movilizacion", movilizacion) :
                new ObjectParameter("movilizacion", typeof(bool));
    
            var aniosExperienciaDesdeParameter = aniosExperienciaDesde.HasValue ?
                new ObjectParameter("aniosExperienciaDesde", aniosExperienciaDesde) :
                new ObjectParameter("aniosExperienciaDesde", typeof(int));
    
            var aniosExperienciaHastaParameter = aniosExperienciaHasta.HasValue ?
                new ObjectParameter("aniosExperienciaHasta", aniosExperienciaHasta) :
                new ObjectParameter("aniosExperienciaHasta", typeof(int));
    
            var sueldoPretendidoDesdeParameter = sueldoPretendidoDesde.HasValue ?
                new ObjectParameter("sueldoPretendidoDesde", sueldoPretendidoDesde) :
                new ObjectParameter("sueldoPretendidoDesde", typeof(decimal));
    
            var sueldoPretendidoHastaParameter = sueldoPretendidoHasta.HasValue ?
                new ObjectParameter("sueldoPretendidoHasta", sueldoPretendidoHasta) :
                new ObjectParameter("sueldoPretendidoHasta", typeof(decimal));
    
            var edadDesdeParameter = edadDesde.HasValue ?
                new ObjectParameter("edadDesde", edadDesde) :
                new ObjectParameter("edadDesde", typeof(int));
    
            var edadHastaParameter = edadHasta.HasValue ?
                new ObjectParameter("edadHasta", edadHasta) :
                new ObjectParameter("edadHasta", typeof(int));
    
            var puestoParameter = puesto != null ?
                new ObjectParameter("puesto", puesto) :
                new ObjectParameter("puesto", typeof(string));
    
            var estudioParameter = estudio != null ?
                new ObjectParameter("estudio", estudio) :
                new ObjectParameter("estudio", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ReportPostulantes_Result>("sp_ReportPostulantes", idGeneroParameter, carnetDiscapacidadParameter, movilizacionParameter, aniosExperienciaDesdeParameter, aniosExperienciaHastaParameter, sueldoPretendidoDesdeParameter, sueldoPretendidoHastaParameter, edadDesdeParameter, edadHastaParameter, puestoParameter, estudioParameter);
        }
    }
}
